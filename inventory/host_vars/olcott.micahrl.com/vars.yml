# The bare domain name which represents your Matrix identity.
# Matrix user ids for your server will be of the form (`@user:<matrix-domain>`).
#
# Note: this playbook does not touch the server referenced here.
# Installation happens on another server ("matrix.<matrix-domain>").
#
# Example value: example.com
matrix_domain: micahrl.com

# This is something which is provided to Let's Encrypt when retrieving SSL certificates for domains.
#
# In case SSL renewal fails at some point, you'll also get an email notification there.
#
# If you decide to use another method for managing SSL certifites (different than the default Let's Encrypt),
# you won't be required to define this variable (see `docs/configuring-playbook-ssl-certificates.md`).
#
# Example value: someone@example.com
matrix_ssl_lets_encrypt_support_email: psyops@micahrl.com

# A shared secret (between Coturn and Synapse) used for authentication.
# You can put any string here, but generating a strong one is preferred (e.g. `pwgen -s 64 1`).
matrix_coturn_turn_static_auth_secret: "{{ vault_matrix_coturn_turn_static_auth_secret }}"

# A secret used to protect access keys issued by the server.
# You can put any string here, but generating a strong one is preferred (e.g. `pwgen -s 64 1`).
matrix_synapse_macaroon_secret_key: "{{ vault_matrix_synapse_macaroon_secret_key }}"


# It's nice and doesn't cost me anything
# And it's extremely considerate to be off by default, ty matrix team
# https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-telemetry.md
matrix_synapse_report_stats: true

# Email settings
matrix_mailer_sender_address: matrix@micahrl.com
matrix_mailer_relay_use: true
matrix_mailer_relay_host_name: "smtp.fastmail.com"
matrix_mailer_relay_host_port: 587
matrix_mailer_relay_auth: true
matrix_mailer_relay_auth_username: "mrled@fastmail.com"
matrix_mailer_relay_auth_password: "{{ vault_matrix_mailer_relay_auth_password }}"

# S3 bucket settings
# Initially set this to true, but had to set it to false and redeploy because it couldn't access the goofy mount at all
matrix_s3_media_store_enabled: false
matrix_s3_media_store_bucket_name: "com-micahrl-matrix-media"
matrix_s3_media_store_aws_access_key: "{{ vault_matrix_s3_media_store_aws_access_key }}"
matrix_s3_media_store_aws_secret_key: "{{ vault_matrix_s3_media_store_aws_secret_key }}"
matrix_s3_media_store_region: "us-east-2"

# Jitsi settings
matrix_jitsi_enabled: true
matrix_jitsi_jicofo_component_secret: "{{ vault_matrix_jitsi_jicofo_component_secret }}"
matrix_jitsi_jicofo_auth_password: "{{ vault_matrix_jitsi_jicofo_auth_password }}"
matrix_jitsi_jvb_auth_password: "{{ vault_matrix_jitsi_jvb_auth_password }}"
matrix_jitsi_jibri_recorder_password: "{{ vault_matrix_jitsi_jibri_recorder_password }}"
matrix_jitsi_jibri_xmpp_password: "{{ vault_matrix_jitsi_jibri_xmpp_password }}"
# Require an authenticated user to create a meeting
matrix_jitsi_enable_auth: true
# Allow guests to join meetings created by authenticated users
matrix_jitsi_enable_guests: true

matrix_synapse_federation_enabled: yes

# NOTE: you have to get a real access token for dimension,
# so you have to deploy the whole server first once and
# create the dimension user before you can set matrix_dimension_enabled to true
# My dimension user is named 'dimension'
matrix_dimension_enabled: true
matrix_dimension_admins:
  - "@admin:micahrl.com"
  - "@me:micahrl.com"
matrix_dimension_access_token: "{{ vault_matrix_dimension_access_token }}"

matrix_synapse_ext_password_provider_shared_secret_auth_enabled: true
matrix_synapse_ext_password_provider_shared_secret_auth_shared_secret: "{{ vault_matrix_synapse_ext_password_provider_shared_secret_auth_shared_secret }}"



